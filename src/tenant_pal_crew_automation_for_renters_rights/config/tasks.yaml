---
legal_analysis_task:
  description: Analyze the renter's issue using the input {renter_issue_description}
    and review the uploaded lease document {lease_document}. Identify and explain
    the tenant rights relevant to the issue, and flag any potentially illegal clauses
    or red flags. Provide clear, straightforward explanations using Groq's LLM for
    fast processing.
  expected_output: A detailed explanation report outlining the tenant rights applicable
    to the renter's issue, including any highlighted illegal clauses or red flags
    from the lease document.
  async_execution: false
  agent: legal_explainer
communication_drafting_task:
  description: Utilize the renter's issue description {renter_issue_description} along
    with the legal insights produced by legal_analysis_task to draft a respectful
    yet assertive message or email. The message should refer to the identified tenant
    rights and propose a resolution in a calm and professional tone.
  expected_output: A drafted communication message/email that addresses the renter's
    concerns, includes references to the legal findings, and suggests a potential
    resolution.
  async_execution: false
  agent: conflict_coach
  context:
  - legal_analysis_task
urgency_assessment_task:
  description: "Analyze the renter's issue described in {renter_issue_description}
    along with the outputs from legal_analysis_task to classify the urgency of the
    situation. The task should label the issue as either \U0001F6A8 Urgent, ⚠️ Concerning,
    or ✅ Routine, and provide a brief justification for the classification."
  expected_output: "A concise classification of the issue's urgency (\U0001F6A8 Urgent,
    ⚠️ Concerning, or ✅ Routine) together with a brief explanation for the chosen
    level."
  async_execution: false
  agent: urgency_filter
  context:
  - legal_analysis_task

compile_renter_report_task:
  description: |
    Compile the information generated by the previous agents into a structured JSON report.
    Use the outputs from legal_analysis_task, communication_drafting_task, and urgency_assessment_task.

    Return the analysis in this exact JSON structure:

    {{
      "renter_support_report": {{
        "issue_summary": "<string: A brief summary of the renter's issue>",
        "legal_analysis": {{
          "identified_rights": "<string: Summary of relevant tenant rights identified>",
          "lease_flags": "<string: Summary of any potentially illegal clauses or red flags noted in the lease snippet>"
        }},
        "communication_draft": "<string: The full text of the drafted message/email for the landlord>",
        "urgency_assessment": {{
          "level": "<string: Urgency classification (e.g., Urgent, Concerning, Routine)>",
          "justification": "<string: Brief explanation for the urgency level>"
        }},
        "recommended_next_steps": [
          "<string: Specific, actionable recommendation 1>",
          "<string: Specific, actionable recommendation 2>",
          "<string: ...more recommendations as appropriate>"
        ]
      }}
    }}

    Ensure all string fields provide clear, concise summaries or the full required text.
    The recommended_next_steps should be tailored advice for the renter based on the overall situation.
  expected_output: "A JSON object following the exact structure specified above, containing the compiled information and recommendations."
  async_execution: false
  agent: report_synthesizer
  context:
    - legal_analysis_task
    - communication_drafting_task
    - urgency_assessment_task
